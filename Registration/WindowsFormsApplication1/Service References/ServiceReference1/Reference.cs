//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="club", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class club : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contact_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Working_categoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact_no {
            get {
                return this.Contact_noField;
            }
            set {
                if ((object.ReferenceEquals(this.Contact_noField, value) != true)) {
                    this.Contact_noField = value;
                    this.RaisePropertyChanged("Contact_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Working_category {
            get {
                return this.Working_categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.Working_categoryField, value) != true)) {
                    this.Working_categoryField = value;
                    this.RaisePropertyChanged("Working_category");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add", ReplyAction="http://tempuri.org/IService1/addResponse")]
        void add(string name, string password, string question, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add", ReplyAction="http://tempuri.org/IService1/addResponse")]
        System.Threading.Tasks.Task addAsync(string name, string password, string question, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search", ReplyAction="http://tempuri.org/IService1/searchResponse")]
        bool search(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search", ReplyAction="http://tempuri.org/IService1/searchResponse")]
        System.Threading.Tasks.Task<bool> searchAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/change_password", ReplyAction="http://tempuri.org/IService1/change_passwordResponse")]
        bool change_password(string q, string a, string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/change_password", ReplyAction="http://tempuri.org/IService1/change_passwordResponse")]
        System.Threading.Tasks.Task<bool> change_passwordAsync(string q, string a, string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_category", ReplyAction="http://tempuri.org/IService1/add_categoryResponse")]
        void add_category(string name, string cat, string q, string cn, string working, string g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_category", ReplyAction="http://tempuri.org/IService1/add_categoryResponse")]
        System.Threading.Tasks.Task add_categoryAsync(string name, string cat, string q, string cn, string working, string g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/change", ReplyAction="http://tempuri.org/IService1/changeResponse")]
        bool change(string name, string password, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/change", ReplyAction="http://tempuri.org/IService1/changeResponse")]
        System.Threading.Tasks.Task<bool> changeAsync(string name, string password, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isadmin", ReplyAction="http://tempuri.org/IService1/isadminResponse")]
        bool isadmin(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isadmin", ReplyAction="http://tempuri.org/IService1/isadminResponse")]
        System.Threading.Tasks.Task<bool> isadminAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_servant", ReplyAction="http://tempuri.org/IService1/search_servantResponse")]
        WindowsFormsApplication1.ServiceReference1.club[] search_servant(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_servant", ReplyAction="http://tempuri.org/IService1/search_servantResponse")]
        System.Threading.Tasks.Task<WindowsFormsApplication1.ServiceReference1.club[]> search_servantAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WindowsFormsApplication1.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsFormsApplication1.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WindowsFormsApplication1.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsFormsApplication1.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApplication1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApplication1.ServiceReference1.IService1>, WindowsFormsApplication1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void add(string name, string password, string question, string answer) {
            base.Channel.add(name, password, question, answer);
        }
        
        public System.Threading.Tasks.Task addAsync(string name, string password, string question, string answer) {
            return base.Channel.addAsync(name, password, question, answer);
        }
        
        public bool search(string name, string password) {
            return base.Channel.search(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> searchAsync(string name, string password) {
            return base.Channel.searchAsync(name, password);
        }
        
        public bool change_password(string q, string a, string p) {
            return base.Channel.change_password(q, a, p);
        }
        
        public System.Threading.Tasks.Task<bool> change_passwordAsync(string q, string a, string p) {
            return base.Channel.change_passwordAsync(q, a, p);
        }
        
        public void add_category(string name, string cat, string q, string cn, string working, string g) {
            base.Channel.add_category(name, cat, q, cn, working, g);
        }
        
        public System.Threading.Tasks.Task add_categoryAsync(string name, string cat, string q, string cn, string working, string g) {
            return base.Channel.add_categoryAsync(name, cat, q, cn, working, g);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public bool change(string name, string password, string key) {
            return base.Channel.change(name, password, key);
        }
        
        public System.Threading.Tasks.Task<bool> changeAsync(string name, string password, string key) {
            return base.Channel.changeAsync(name, password, key);
        }
        
        public bool isadmin(string name, string password) {
            return base.Channel.isadmin(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> isadminAsync(string name, string password) {
            return base.Channel.isadminAsync(name, password);
        }
        
        public WindowsFormsApplication1.ServiceReference1.club[] search_servant(string category) {
            return base.Channel.search_servant(category);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApplication1.ServiceReference1.club[]> search_servantAsync(string category) {
            return base.Channel.search_servantAsync(category);
        }
        
        public WindowsFormsApplication1.ServiceReference1.CompositeType GetDataUsingDataContract(WindowsFormsApplication1.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApplication1.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WindowsFormsApplication1.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
